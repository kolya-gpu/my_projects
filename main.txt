import pandas as pd
import sqlite3
import folium
import os

# Создаем тестовый CSV-файл с данными
csv_content = """id,name,latitude,longitude,timestamp
1,Location1,42.5,-71.1,2025-04-10 12:00:00
2,Location2,39.8,-74.0,2025-04-10 12:05:00
3,Location3,45.2,-72.8,2025-04-10 12:10:00
"""

with open("geodata.csv", "w") as f:
    f.write(csv_content)

def load_data(csv_file):
    return pd.read_csv(csv_file)

def save_to_db(df, db_file):
    conn = sqlite3.connect(db_file)
    df.to_sql('geolocations', conn, if_exists='replace', index=False)
    conn.close()

def query_db(db_file, query):
    conn = sqlite3.connect(db_file)
    result = pd.read_sql_query(query, conn)
    conn.close()
    return result

def create_map(df, output_html='map.html'):
    if df.empty:
        print("Нет данных для отображения карты.")
        return
    avg_lat = df['latitude'].mean()
    avg_lon = df['longitude'].mean()
    geo_map = folium.Map(location=[avg_lat, avg_lon], zoom_start=5)
    for idx, row in df.iterrows():
        folium.Marker(
            location=[row['latitude'], row['longitude']],
            popup=row.get('name', 'Location')
        ).add_to(geo_map)
    geo_map.save(output_html)
    print("Карта сохранена в", output_html)

# Основная логика
csv_file = "geodata.csv"
db_file = "geolocations.db"

data = load_data(csv_file)
print("Первичные данные:")
print(data.head())

save_to_db(data, db_file)
query = "SELECT * FROM geolocations WHERE latitude > 40"
filtered = query_db(db_file, query)
print("\nОтфильтрованные данные:")
print(filtered)
create_map(filtered)

# Проверка наличия файлов, созданных в процессе выполнения
print("\nСписок файлов в текущей директории:")
print(os.listdir("."))
